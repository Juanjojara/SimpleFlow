//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SimpleFlowModel", "FK_ActionInputs_Actions", "Actions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimpleFlow.Actions), "ActionInputs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleFlow.ActionInputs))]
[assembly: EdmRelationshipAttribute("SimpleFlowModel", "FK_ActionOutputs_Actions", "Actions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimpleFlow.Actions), "ActionOutputs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleFlow.ActionOutputs))]
[assembly: EdmRelationshipAttribute("SimpleFlowModel", "FK_Connections_Actions", "Actions", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SimpleFlow.Actions), "Connections", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleFlow.Connections))]
[assembly: EdmRelationshipAttribute("SimpleFlowModel", "FK_Connections_Actions1", "Actions", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SimpleFlow.Actions), "Connections", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleFlow.Connections))]
[assembly: EdmRelationshipAttribute("SimpleFlowModel", "FK_FlowActions_Actions", "Actions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimpleFlow.Actions), "FlowActions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleFlow.FlowActions))]
[assembly: EdmRelationshipAttribute("SimpleFlowModel", "FK_FlowActions_Flows", "Flows", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimpleFlow.Flows), "FlowActions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleFlow.FlowActions))]
[assembly: EdmRelationshipAttribute("SimpleFlowModel", "FK_Flows_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimpleFlow.Users), "Flows", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleFlow.Flows))]
[assembly: EdmRelationshipAttribute("SimpleFlowModel", "FK_FlowInstances_Actions", "Actions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimpleFlow.Actions), "FlowInstances", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleFlow.FlowInstances))]
[assembly: EdmRelationshipAttribute("SimpleFlowModel", "FK_FlowInstances_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimpleFlow.Users), "FlowInstances", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleFlow.FlowInstances))]
[assembly: EdmRelationshipAttribute("SimpleFlowModel", "FK_FlowInstances_Flows", "Flows", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimpleFlow.Flows), "FlowInstances", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleFlow.FlowInstances))]
[assembly: EdmRelationshipAttribute("SimpleFlowModel", "FK_ActionOptions_Actions", "Actions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimpleFlow.Actions), "ActionOptions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleFlow.ActionOptions))]
[assembly: EdmRelationshipAttribute("SimpleFlowModel", "FK_ActionOptions_Options", "Options", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimpleFlow.Options), "ActionOptions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleFlow.ActionOptions))]
[assembly: EdmRelationshipAttribute("SimpleFlowModel", "FK_FlowActionOptions_ActionOptions", "ActionOptions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimpleFlow.ActionOptions), "FlowActionOptions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleFlow.FlowActionOptions))]
[assembly: EdmRelationshipAttribute("SimpleFlowModel", "FK_FlowActionOptions_Flows", "Flows", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimpleFlow.Flows), "FlowActionOptions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleFlow.FlowActionOptions))]
[assembly: EdmRelationshipAttribute("SimpleFlowModel", "FK_FlowMOInstances_FlowInstances", "FlowInstances", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimpleFlow.FlowInstances), "FlowMOInstances", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleFlow.FlowMOInstances))]
[assembly: EdmRelationshipAttribute("SimpleFlowModel", "FK_FlowMOInstances_FlowMultiOptions", "FlowMultiOptions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimpleFlow.FlowMultiOptions), "FlowMOInstances", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleFlow.FlowMOInstances))]
[assembly: EdmRelationshipAttribute("SimpleFlowModel", "FK_FlowMultiOptions_Flows", "Flows", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimpleFlow.Flows), "FlowMultiOptions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleFlow.FlowMultiOptions))]
[assembly: EdmRelationshipAttribute("SimpleFlowModel", "FK_MonitorInstances_Flows", "Flows", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimpleFlow.Flows), "MonitorInstances", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleFlow.MonitorInstances))]
[assembly: EdmRelationshipAttribute("SimpleFlowModel", "FK_FlowActionInputs_ActionInputs", "ActionInputs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimpleFlow.ActionInputs), "FlowActionInputs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleFlow.FlowActionInputs))]
[assembly: EdmRelationshipAttribute("SimpleFlowModel", "FK_FlowActionOutputs_ActionOutputs", "ActionOutputs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimpleFlow.ActionOutputs), "FlowActionOutputs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleFlow.FlowActionOutputs))]
[assembly: EdmRelationshipAttribute("SimpleFlowModel", "FK_FlowActionInputs_Flows", "Flows", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimpleFlow.Flows), "FlowActionInputs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleFlow.FlowActionInputs))]
[assembly: EdmRelationshipAttribute("SimpleFlowModel", "FK_FlowActionOutputs_Flows", "Flows", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimpleFlow.Flows), "FlowActionOutputs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleFlow.FlowActionOutputs))]
[assembly: EdmRelationshipAttribute("SimpleFlowModel", "FK_UseCases_Flows", "Flows", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimpleFlow.Flows), "UseCases", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleFlow.UseCases))]

#endregion

namespace SimpleFlow
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SimpleFlowEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SimpleFlowEntities object using the connection string found in the 'SimpleFlowEntities' section of the application configuration file.
        /// </summary>
        public SimpleFlowEntities() : base("name=SimpleFlowEntities", "SimpleFlowEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SimpleFlowEntities object.
        /// </summary>
        public SimpleFlowEntities(string connectionString) : base(connectionString, "SimpleFlowEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SimpleFlowEntities object.
        /// </summary>
        public SimpleFlowEntities(EntityConnection connection) : base(connection, "SimpleFlowEntities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActionInputs> ActionInputs
        {
            get
            {
                if ((_ActionInputs == null))
                {
                    _ActionInputs = base.CreateObjectSet<ActionInputs>("ActionInputs");
                }
                return _ActionInputs;
            }
        }
        private ObjectSet<ActionInputs> _ActionInputs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActionOutputs> ActionOutputs
        {
            get
            {
                if ((_ActionOutputs == null))
                {
                    _ActionOutputs = base.CreateObjectSet<ActionOutputs>("ActionOutputs");
                }
                return _ActionOutputs;
            }
        }
        private ObjectSet<ActionOutputs> _ActionOutputs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Actions> Actions
        {
            get
            {
                if ((_Actions == null))
                {
                    _Actions = base.CreateObjectSet<Actions>("Actions");
                }
                return _Actions;
            }
        }
        private ObjectSet<Actions> _Actions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Connections> Connections
        {
            get
            {
                if ((_Connections == null))
                {
                    _Connections = base.CreateObjectSet<Connections>("Connections");
                }
                return _Connections;
            }
        }
        private ObjectSet<Connections> _Connections;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FlowActions> FlowActions
        {
            get
            {
                if ((_FlowActions == null))
                {
                    _FlowActions = base.CreateObjectSet<FlowActions>("FlowActions");
                }
                return _FlowActions;
            }
        }
        private ObjectSet<FlowActions> _FlowActions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Flows> Flows
        {
            get
            {
                if ((_Flows == null))
                {
                    _Flows = base.CreateObjectSet<Flows>("Flows");
                }
                return _Flows;
            }
        }
        private ObjectSet<Flows> _Flows;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FlowInstances> FlowInstances
        {
            get
            {
                if ((_FlowInstances == null))
                {
                    _FlowInstances = base.CreateObjectSet<FlowInstances>("FlowInstances");
                }
                return _FlowInstances;
            }
        }
        private ObjectSet<FlowInstances> _FlowInstances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ApplicationInfo> ApplicationInfo
        {
            get
            {
                if ((_ApplicationInfo == null))
                {
                    _ApplicationInfo = base.CreateObjectSet<ApplicationInfo>("ApplicationInfo");
                }
                return _ApplicationInfo;
            }
        }
        private ObjectSet<ApplicationInfo> _ApplicationInfo;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActionOptions> ActionOptions
        {
            get
            {
                if ((_ActionOptions == null))
                {
                    _ActionOptions = base.CreateObjectSet<ActionOptions>("ActionOptions");
                }
                return _ActionOptions;
            }
        }
        private ObjectSet<ActionOptions> _ActionOptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FlowActionOptions> FlowActionOptions
        {
            get
            {
                if ((_FlowActionOptions == null))
                {
                    _FlowActionOptions = base.CreateObjectSet<FlowActionOptions>("FlowActionOptions");
                }
                return _FlowActionOptions;
            }
        }
        private ObjectSet<FlowActionOptions> _FlowActionOptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FlowMOInstances> FlowMOInstances
        {
            get
            {
                if ((_FlowMOInstances == null))
                {
                    _FlowMOInstances = base.CreateObjectSet<FlowMOInstances>("FlowMOInstances");
                }
                return _FlowMOInstances;
            }
        }
        private ObjectSet<FlowMOInstances> _FlowMOInstances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FlowMultiOptions> FlowMultiOptions
        {
            get
            {
                if ((_FlowMultiOptions == null))
                {
                    _FlowMultiOptions = base.CreateObjectSet<FlowMultiOptions>("FlowMultiOptions");
                }
                return _FlowMultiOptions;
            }
        }
        private ObjectSet<FlowMultiOptions> _FlowMultiOptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MonitorInstances> MonitorInstances
        {
            get
            {
                if ((_MonitorInstances == null))
                {
                    _MonitorInstances = base.CreateObjectSet<MonitorInstances>("MonitorInstances");
                }
                return _MonitorInstances;
            }
        }
        private ObjectSet<MonitorInstances> _MonitorInstances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Options> Options
        {
            get
            {
                if ((_Options == null))
                {
                    _Options = base.CreateObjectSet<Options>("Options");
                }
                return _Options;
            }
        }
        private ObjectSet<Options> _Options;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FlowActionInputs> FlowActionInputs
        {
            get
            {
                if ((_FlowActionInputs == null))
                {
                    _FlowActionInputs = base.CreateObjectSet<FlowActionInputs>("FlowActionInputs");
                }
                return _FlowActionInputs;
            }
        }
        private ObjectSet<FlowActionInputs> _FlowActionInputs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FlowActionOutputs> FlowActionOutputs
        {
            get
            {
                if ((_FlowActionOutputs == null))
                {
                    _FlowActionOutputs = base.CreateObjectSet<FlowActionOutputs>("FlowActionOutputs");
                }
                return _FlowActionOutputs;
            }
        }
        private ObjectSet<FlowActionOutputs> _FlowActionOutputs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UseCases> UseCases
        {
            get
            {
                if ((_UseCases == null))
                {
                    _UseCases = base.CreateObjectSet<UseCases>("UseCases");
                }
                return _UseCases;
            }
        }
        private ObjectSet<UseCases> _UseCases;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActionInputs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActionInputs(ActionInputs actionInputs)
        {
            base.AddObject("ActionInputs", actionInputs);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActionOutputs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActionOutputs(ActionOutputs actionOutputs)
        {
            base.AddObject("ActionOutputs", actionOutputs);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Actions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActions(Actions actions)
        {
            base.AddObject("Actions", actions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Connections EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConnections(Connections connections)
        {
            base.AddObject("Connections", connections);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FlowActions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFlowActions(FlowActions flowActions)
        {
            base.AddObject("FlowActions", flowActions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Flows EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFlows(Flows flows)
        {
            base.AddObject("Flows", flows);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FlowInstances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFlowInstances(FlowInstances flowInstances)
        {
            base.AddObject("FlowInstances", flowInstances);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ApplicationInfo EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplicationInfo(ApplicationInfo applicationInfo)
        {
            base.AddObject("ApplicationInfo", applicationInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActionOptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActionOptions(ActionOptions actionOptions)
        {
            base.AddObject("ActionOptions", actionOptions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FlowActionOptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFlowActionOptions(FlowActionOptions flowActionOptions)
        {
            base.AddObject("FlowActionOptions", flowActionOptions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FlowMOInstances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFlowMOInstances(FlowMOInstances flowMOInstances)
        {
            base.AddObject("FlowMOInstances", flowMOInstances);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FlowMultiOptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFlowMultiOptions(FlowMultiOptions flowMultiOptions)
        {
            base.AddObject("FlowMultiOptions", flowMultiOptions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MonitorInstances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMonitorInstances(MonitorInstances monitorInstances)
        {
            base.AddObject("MonitorInstances", monitorInstances);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Options EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOptions(Options options)
        {
            base.AddObject("Options", options);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FlowActionInputs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFlowActionInputs(FlowActionInputs flowActionInputs)
        {
            base.AddObject("FlowActionInputs", flowActionInputs);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FlowActionOutputs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFlowActionOutputs(FlowActionOutputs flowActionOutputs)
        {
            base.AddObject("FlowActionOutputs", flowActionOutputs);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UseCases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUseCases(UseCases useCases)
        {
            base.AddObject("UseCases", useCases);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimpleFlowModel", Name="ActionInputs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActionInputs : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActionInputs object.
        /// </summary>
        /// <param name="inputId">Initial value of the InputId property.</param>
        /// <param name="inputObject">Initial value of the InputObject property.</param>
        public static ActionInputs CreateActionInputs(global::System.Int32 inputId, global::System.String inputObject)
        {
            ActionInputs actionInputs = new ActionInputs();
            actionInputs.InputId = inputId;
            actionInputs.InputObject = inputObject;
            return actionInputs;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InputId
        {
            get
            {
                return _InputId;
            }
            set
            {
                if (_InputId != value)
                {
                    OnInputIdChanging(value);
                    ReportPropertyChanging("InputId");
                    _InputId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InputId");
                    OnInputIdChanged();
                }
            }
        }
        private global::System.Int32 _InputId;
        partial void OnInputIdChanging(global::System.Int32 value);
        partial void OnInputIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InputObject
        {
            get
            {
                return _InputObject;
            }
            set
            {
                OnInputObjectChanging(value);
                ReportPropertyChanging("InputObject");
                _InputObject = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InputObject");
                OnInputObjectChanged();
            }
        }
        private global::System.String _InputObject;
        partial void OnInputObjectChanging(global::System.String value);
        partial void OnInputObjectChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_ActionInputs_Actions", "Actions")]
        public Actions Actions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actions>("SimpleFlowModel.FK_ActionInputs_Actions", "Actions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actions>("SimpleFlowModel.FK_ActionInputs_Actions", "Actions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Actions> ActionsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actions>("SimpleFlowModel.FK_ActionInputs_Actions", "Actions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Actions>("SimpleFlowModel.FK_ActionInputs_Actions", "Actions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_FlowActionInputs_ActionInputs", "FlowActionInputs")]
        public EntityCollection<FlowActionInputs> FlowActionInputs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FlowActionInputs>("SimpleFlowModel.FK_FlowActionInputs_ActionInputs", "FlowActionInputs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FlowActionInputs>("SimpleFlowModel.FK_FlowActionInputs_ActionInputs", "FlowActionInputs", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimpleFlowModel", Name="ActionOptions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActionOptions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActionOptions object.
        /// </summary>
        /// <param name="actionOptionId">Initial value of the ActionOptionId property.</param>
        public static ActionOptions CreateActionOptions(global::System.Int32 actionOptionId)
        {
            ActionOptions actionOptions = new ActionOptions();
            actionOptions.ActionOptionId = actionOptionId;
            return actionOptions;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActionOptionId
        {
            get
            {
                return _ActionOptionId;
            }
            set
            {
                if (_ActionOptionId != value)
                {
                    OnActionOptionIdChanging(value);
                    ReportPropertyChanging("ActionOptionId");
                    _ActionOptionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActionOptionId");
                    OnActionOptionIdChanged();
                }
            }
        }
        private global::System.Int32 _ActionOptionId;
        partial void OnActionOptionIdChanging(global::System.Int32 value);
        partial void OnActionOptionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ControlName
        {
            get
            {
                return _ControlName;
            }
            set
            {
                OnControlNameChanging(value);
                ReportPropertyChanging("ControlName");
                _ControlName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ControlName");
                OnControlNameChanged();
            }
        }
        private global::System.String _ControlName;
        partial void OnControlNameChanging(global::System.String value);
        partial void OnControlNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DefaultValue
        {
            get
            {
                return _DefaultValue;
            }
            set
            {
                OnDefaultValueChanging(value);
                ReportPropertyChanging("DefaultValue");
                _DefaultValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DefaultValue");
                OnDefaultValueChanged();
            }
        }
        private global::System.String _DefaultValue;
        partial void OnDefaultValueChanging(global::System.String value);
        partial void OnDefaultValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_ActionOptions_Actions", "Actions")]
        public Actions Actions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actions>("SimpleFlowModel.FK_ActionOptions_Actions", "Actions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actions>("SimpleFlowModel.FK_ActionOptions_Actions", "Actions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Actions> ActionsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actions>("SimpleFlowModel.FK_ActionOptions_Actions", "Actions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Actions>("SimpleFlowModel.FK_ActionOptions_Actions", "Actions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_ActionOptions_Options", "Options")]
        public Options Options
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Options>("SimpleFlowModel.FK_ActionOptions_Options", "Options").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Options>("SimpleFlowModel.FK_ActionOptions_Options", "Options").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Options> OptionsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Options>("SimpleFlowModel.FK_ActionOptions_Options", "Options");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Options>("SimpleFlowModel.FK_ActionOptions_Options", "Options", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_FlowActionOptions_ActionOptions", "FlowActionOptions")]
        public EntityCollection<FlowActionOptions> FlowActionOptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FlowActionOptions>("SimpleFlowModel.FK_FlowActionOptions_ActionOptions", "FlowActionOptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FlowActionOptions>("SimpleFlowModel.FK_FlowActionOptions_ActionOptions", "FlowActionOptions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimpleFlowModel", Name="ActionOutputs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActionOutputs : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActionOutputs object.
        /// </summary>
        /// <param name="outputId">Initial value of the OutputId property.</param>
        /// <param name="outputObject">Initial value of the OutputObject property.</param>
        public static ActionOutputs CreateActionOutputs(global::System.Int32 outputId, global::System.String outputObject)
        {
            ActionOutputs actionOutputs = new ActionOutputs();
            actionOutputs.OutputId = outputId;
            actionOutputs.OutputObject = outputObject;
            return actionOutputs;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OutputId
        {
            get
            {
                return _OutputId;
            }
            set
            {
                if (_OutputId != value)
                {
                    OnOutputIdChanging(value);
                    ReportPropertyChanging("OutputId");
                    _OutputId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OutputId");
                    OnOutputIdChanged();
                }
            }
        }
        private global::System.Int32 _OutputId;
        partial void OnOutputIdChanging(global::System.Int32 value);
        partial void OnOutputIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OutputObject
        {
            get
            {
                return _OutputObject;
            }
            set
            {
                OnOutputObjectChanging(value);
                ReportPropertyChanging("OutputObject");
                _OutputObject = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OutputObject");
                OnOutputObjectChanged();
            }
        }
        private global::System.String _OutputObject;
        partial void OnOutputObjectChanging(global::System.String value);
        partial void OnOutputObjectChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_ActionOutputs_Actions", "Actions")]
        public Actions Actions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actions>("SimpleFlowModel.FK_ActionOutputs_Actions", "Actions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actions>("SimpleFlowModel.FK_ActionOutputs_Actions", "Actions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Actions> ActionsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actions>("SimpleFlowModel.FK_ActionOutputs_Actions", "Actions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Actions>("SimpleFlowModel.FK_ActionOutputs_Actions", "Actions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_FlowActionOutputs_ActionOutputs", "FlowActionOutputs")]
        public EntityCollection<FlowActionOutputs> FlowActionOutputs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FlowActionOutputs>("SimpleFlowModel.FK_FlowActionOutputs_ActionOutputs", "FlowActionOutputs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FlowActionOutputs>("SimpleFlowModel.FK_FlowActionOutputs_ActionOutputs", "FlowActionOutputs", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimpleFlowModel", Name="Actions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Actions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Actions object.
        /// </summary>
        /// <param name="actionId">Initial value of the ActionId property.</param>
        /// <param name="actionName">Initial value of the ActionName property.</param>
        /// <param name="actionDescription">Initial value of the ActionDescription property.</param>
        /// <param name="actionType">Initial value of the ActionType property.</param>
        public static Actions CreateActions(global::System.String actionId, global::System.String actionName, global::System.String actionDescription, global::System.String actionType)
        {
            Actions actions = new Actions();
            actions.ActionId = actionId;
            actions.ActionName = actionName;
            actions.ActionDescription = actionDescription;
            actions.ActionType = actionType;
            return actions;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActionId
        {
            get
            {
                return _ActionId;
            }
            set
            {
                if (_ActionId != value)
                {
                    OnActionIdChanging(value);
                    ReportPropertyChanging("ActionId");
                    _ActionId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ActionId");
                    OnActionIdChanged();
                }
            }
        }
        private global::System.String _ActionId;
        partial void OnActionIdChanging(global::System.String value);
        partial void OnActionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActionName
        {
            get
            {
                return _ActionName;
            }
            set
            {
                OnActionNameChanging(value);
                ReportPropertyChanging("ActionName");
                _ActionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ActionName");
                OnActionNameChanged();
            }
        }
        private global::System.String _ActionName;
        partial void OnActionNameChanging(global::System.String value);
        partial void OnActionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActionDescription
        {
            get
            {
                return _ActionDescription;
            }
            set
            {
                OnActionDescriptionChanging(value);
                ReportPropertyChanging("ActionDescription");
                _ActionDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ActionDescription");
                OnActionDescriptionChanged();
            }
        }
        private global::System.String _ActionDescription;
        partial void OnActionDescriptionChanging(global::System.String value);
        partial void OnActionDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActionType
        {
            get
            {
                return _ActionType;
            }
            set
            {
                OnActionTypeChanging(value);
                ReportPropertyChanging("ActionType");
                _ActionType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ActionType");
                OnActionTypeChanged();
            }
        }
        private global::System.String _ActionType;
        partial void OnActionTypeChanging(global::System.String value);
        partial void OnActionTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ActionPosition
        {
            get
            {
                return _ActionPosition;
            }
            set
            {
                OnActionPositionChanging(value);
                ReportPropertyChanging("ActionPosition");
                _ActionPosition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActionPosition");
                OnActionPositionChanged();
            }
        }
        private Nullable<global::System.Int32> _ActionPosition;
        partial void OnActionPositionChanging(Nullable<global::System.Int32> value);
        partial void OnActionPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActionPage
        {
            get
            {
                return _ActionPage;
            }
            set
            {
                OnActionPageChanging(value);
                ReportPropertyChanging("ActionPage");
                _ActionPage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ActionPage");
                OnActionPageChanged();
            }
        }
        private global::System.String _ActionPage;
        partial void OnActionPageChanging(global::System.String value);
        partial void OnActionPageChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_ActionInputs_Actions", "ActionInputs")]
        public EntityCollection<ActionInputs> ActionInputs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActionInputs>("SimpleFlowModel.FK_ActionInputs_Actions", "ActionInputs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActionInputs>("SimpleFlowModel.FK_ActionInputs_Actions", "ActionInputs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_ActionOutputs_Actions", "ActionOutputs")]
        public EntityCollection<ActionOutputs> ActionOutputs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActionOutputs>("SimpleFlowModel.FK_ActionOutputs_Actions", "ActionOutputs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActionOutputs>("SimpleFlowModel.FK_ActionOutputs_Actions", "ActionOutputs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_Connections_Actions", "Connections")]
        public EntityCollection<Connections> Connections
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Connections>("SimpleFlowModel.FK_Connections_Actions", "Connections");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Connections>("SimpleFlowModel.FK_Connections_Actions", "Connections", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_Connections_Actions1", "Connections")]
        public EntityCollection<Connections> Connections1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Connections>("SimpleFlowModel.FK_Connections_Actions1", "Connections");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Connections>("SimpleFlowModel.FK_Connections_Actions1", "Connections", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_FlowActions_Actions", "FlowActions")]
        public EntityCollection<FlowActions> FlowActions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FlowActions>("SimpleFlowModel.FK_FlowActions_Actions", "FlowActions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FlowActions>("SimpleFlowModel.FK_FlowActions_Actions", "FlowActions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_FlowInstances_Actions", "FlowInstances")]
        public EntityCollection<FlowInstances> FlowInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FlowInstances>("SimpleFlowModel.FK_FlowInstances_Actions", "FlowInstances");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FlowInstances>("SimpleFlowModel.FK_FlowInstances_Actions", "FlowInstances", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_ActionOptions_Actions", "ActionOptions")]
        public EntityCollection<ActionOptions> ActionOptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActionOptions>("SimpleFlowModel.FK_ActionOptions_Actions", "ActionOptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActionOptions>("SimpleFlowModel.FK_ActionOptions_Actions", "ActionOptions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimpleFlowModel", Name="ApplicationInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApplicationInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApplicationInfo object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="applicationSecret">Initial value of the ApplicationSecret property.</param>
        /// <param name="applicationURL">Initial value of the ApplicationURL property.</param>
        /// <param name="redirectURL">Initial value of the RedirectURL property.</param>
        /// <param name="appUrlSsl">Initial value of the AppUrlSsl property.</param>
        /// <param name="applicationInfoId">Initial value of the ApplicationInfoId property.</param>
        public static ApplicationInfo CreateApplicationInfo(global::System.String applicationId, global::System.String applicationSecret, global::System.String applicationURL, global::System.String redirectURL, global::System.String appUrlSsl, global::System.Int32 applicationInfoId)
        {
            ApplicationInfo applicationInfo = new ApplicationInfo();
            applicationInfo.ApplicationId = applicationId;
            applicationInfo.ApplicationSecret = applicationSecret;
            applicationInfo.ApplicationURL = applicationURL;
            applicationInfo.RedirectURL = redirectURL;
            applicationInfo.AppUrlSsl = appUrlSsl;
            applicationInfo.ApplicationInfoId = applicationInfoId;
            return applicationInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.String _ApplicationId;
        partial void OnApplicationIdChanging(global::System.String value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationSecret
        {
            get
            {
                return _ApplicationSecret;
            }
            set
            {
                OnApplicationSecretChanging(value);
                ReportPropertyChanging("ApplicationSecret");
                _ApplicationSecret = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApplicationSecret");
                OnApplicationSecretChanged();
            }
        }
        private global::System.String _ApplicationSecret;
        partial void OnApplicationSecretChanging(global::System.String value);
        partial void OnApplicationSecretChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationURL
        {
            get
            {
                return _ApplicationURL;
            }
            set
            {
                OnApplicationURLChanging(value);
                ReportPropertyChanging("ApplicationURL");
                _ApplicationURL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApplicationURL");
                OnApplicationURLChanged();
            }
        }
        private global::System.String _ApplicationURL;
        partial void OnApplicationURLChanging(global::System.String value);
        partial void OnApplicationURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RedirectURL
        {
            get
            {
                return _RedirectURL;
            }
            set
            {
                OnRedirectURLChanging(value);
                ReportPropertyChanging("RedirectURL");
                _RedirectURL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RedirectURL");
                OnRedirectURLChanged();
            }
        }
        private global::System.String _RedirectURL;
        partial void OnRedirectURLChanging(global::System.String value);
        partial void OnRedirectURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AppUrlSsl
        {
            get
            {
                return _AppUrlSsl;
            }
            set
            {
                OnAppUrlSslChanging(value);
                ReportPropertyChanging("AppUrlSsl");
                _AppUrlSsl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AppUrlSsl");
                OnAppUrlSslChanged();
            }
        }
        private global::System.String _AppUrlSsl;
        partial void OnAppUrlSslChanging(global::System.String value);
        partial void OnAppUrlSslChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PageId
        {
            get
            {
                return _PageId;
            }
            set
            {
                OnPageIdChanging(value);
                ReportPropertyChanging("PageId");
                _PageId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PageId");
                OnPageIdChanged();
            }
        }
        private global::System.String _PageId;
        partial void OnPageIdChanging(global::System.String value);
        partial void OnPageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApplicationAT
        {
            get
            {
                return _ApplicationAT;
            }
            set
            {
                OnApplicationATChanging(value);
                ReportPropertyChanging("ApplicationAT");
                _ApplicationAT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApplicationAT");
                OnApplicationATChanged();
            }
        }
        private global::System.String _ApplicationAT;
        partial void OnApplicationATChanging(global::System.String value);
        partial void OnApplicationATChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ATexpiration
        {
            get
            {
                return _ATexpiration;
            }
            set
            {
                OnATexpirationChanging(value);
                ReportPropertyChanging("ATexpiration");
                _ATexpiration = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ATexpiration");
                OnATexpirationChanged();
            }
        }
        private global::System.String _ATexpiration;
        partial void OnATexpirationChanging(global::System.String value);
        partial void OnATexpirationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PageOwnerId
        {
            get
            {
                return _PageOwnerId;
            }
            set
            {
                OnPageOwnerIdChanging(value);
                ReportPropertyChanging("PageOwnerId");
                _PageOwnerId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PageOwnerId");
                OnPageOwnerIdChanged();
            }
        }
        private global::System.String _PageOwnerId;
        partial void OnPageOwnerIdChanging(global::System.String value);
        partial void OnPageOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationInfoId
        {
            get
            {
                return _ApplicationInfoId;
            }
            set
            {
                if (_ApplicationInfoId != value)
                {
                    OnApplicationInfoIdChanging(value);
                    ReportPropertyChanging("ApplicationInfoId");
                    _ApplicationInfoId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationInfoId");
                    OnApplicationInfoIdChanged();
                }
            }
        }
        private global::System.Int32 _ApplicationInfoId;
        partial void OnApplicationInfoIdChanging(global::System.Int32 value);
        partial void OnApplicationInfoIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimpleFlowModel", Name="Connections")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Connections : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Connections object.
        /// </summary>
        /// <param name="connectionId">Initial value of the ConnectionId property.</param>
        public static Connections CreateConnections(global::System.Int32 connectionId)
        {
            Connections connections = new Connections();
            connections.ConnectionId = connectionId;
            return connections;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConnectionId
        {
            get
            {
                return _ConnectionId;
            }
            set
            {
                if (_ConnectionId != value)
                {
                    OnConnectionIdChanging(value);
                    ReportPropertyChanging("ConnectionId");
                    _ConnectionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ConnectionId");
                    OnConnectionIdChanged();
                }
            }
        }
        private global::System.Int32 _ConnectionId;
        partial void OnConnectionIdChanging(global::System.Int32 value);
        partial void OnConnectionIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_Connections_Actions", "Actions")]
        public Actions Actions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actions>("SimpleFlowModel.FK_Connections_Actions", "Actions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actions>("SimpleFlowModel.FK_Connections_Actions", "Actions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Actions> ActionsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actions>("SimpleFlowModel.FK_Connections_Actions", "Actions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Actions>("SimpleFlowModel.FK_Connections_Actions", "Actions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_Connections_Actions1", "Actions")]
        public Actions Actions1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actions>("SimpleFlowModel.FK_Connections_Actions1", "Actions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actions>("SimpleFlowModel.FK_Connections_Actions1", "Actions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Actions> Actions1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actions>("SimpleFlowModel.FK_Connections_Actions1", "Actions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Actions>("SimpleFlowModel.FK_Connections_Actions1", "Actions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimpleFlowModel", Name="FlowActionInputs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FlowActionInputs : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FlowActionInputs object.
        /// </summary>
        /// <param name="flowActInputId">Initial value of the FlowActInputId property.</param>
        /// <param name="flowPosition">Initial value of the FlowPosition property.</param>
        public static FlowActionInputs CreateFlowActionInputs(global::System.Int32 flowActInputId, global::System.Int32 flowPosition)
        {
            FlowActionInputs flowActionInputs = new FlowActionInputs();
            flowActionInputs.FlowActInputId = flowActInputId;
            flowActionInputs.FlowPosition = flowPosition;
            return flowActionInputs;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FlowActInputId
        {
            get
            {
                return _FlowActInputId;
            }
            set
            {
                if (_FlowActInputId != value)
                {
                    OnFlowActInputIdChanging(value);
                    ReportPropertyChanging("FlowActInputId");
                    _FlowActInputId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FlowActInputId");
                    OnFlowActInputIdChanged();
                }
            }
        }
        private global::System.Int32 _FlowActInputId;
        partial void OnFlowActInputIdChanging(global::System.Int32 value);
        partial void OnFlowActInputIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FlowPosition
        {
            get
            {
                return _FlowPosition;
            }
            set
            {
                OnFlowPositionChanging(value);
                ReportPropertyChanging("FlowPosition");
                _FlowPosition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FlowPosition");
                OnFlowPositionChanged();
            }
        }
        private global::System.Int32 _FlowPosition;
        partial void OnFlowPositionChanging(global::System.Int32 value);
        partial void OnFlowPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_FlowActionInputs_ActionInputs", "ActionInputs")]
        public ActionInputs ActionInputs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionInputs>("SimpleFlowModel.FK_FlowActionInputs_ActionInputs", "ActionInputs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionInputs>("SimpleFlowModel.FK_FlowActionInputs_ActionInputs", "ActionInputs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ActionInputs> ActionInputsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionInputs>("SimpleFlowModel.FK_FlowActionInputs_ActionInputs", "ActionInputs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ActionInputs>("SimpleFlowModel.FK_FlowActionInputs_ActionInputs", "ActionInputs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_FlowActionInputs_Flows", "Flows")]
        public Flows Flows
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flows>("SimpleFlowModel.FK_FlowActionInputs_Flows", "Flows").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flows>("SimpleFlowModel.FK_FlowActionInputs_Flows", "Flows").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Flows> FlowsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flows>("SimpleFlowModel.FK_FlowActionInputs_Flows", "Flows");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Flows>("SimpleFlowModel.FK_FlowActionInputs_Flows", "Flows", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimpleFlowModel", Name="FlowActionOptions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FlowActionOptions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FlowActionOptions object.
        /// </summary>
        /// <param name="flowActOptId">Initial value of the FlowActOptId property.</param>
        /// <param name="flowPosition">Initial value of the FlowPosition property.</param>
        public static FlowActionOptions CreateFlowActionOptions(global::System.Int32 flowActOptId, global::System.Int32 flowPosition)
        {
            FlowActionOptions flowActionOptions = new FlowActionOptions();
            flowActionOptions.FlowActOptId = flowActOptId;
            flowActionOptions.FlowPosition = flowPosition;
            return flowActionOptions;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FlowActOptId
        {
            get
            {
                return _FlowActOptId;
            }
            set
            {
                if (_FlowActOptId != value)
                {
                    OnFlowActOptIdChanging(value);
                    ReportPropertyChanging("FlowActOptId");
                    _FlowActOptId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FlowActOptId");
                    OnFlowActOptIdChanged();
                }
            }
        }
        private global::System.Int32 _FlowActOptId;
        partial void OnFlowActOptIdChanging(global::System.Int32 value);
        partial void OnFlowActOptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FlowPosition
        {
            get
            {
                return _FlowPosition;
            }
            set
            {
                OnFlowPositionChanging(value);
                ReportPropertyChanging("FlowPosition");
                _FlowPosition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FlowPosition");
                OnFlowPositionChanged();
            }
        }
        private global::System.Int32 _FlowPosition;
        partial void OnFlowPositionChanging(global::System.Int32 value);
        partial void OnFlowPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_FlowActionOptions_ActionOptions", "ActionOptions")]
        public ActionOptions ActionOptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionOptions>("SimpleFlowModel.FK_FlowActionOptions_ActionOptions", "ActionOptions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionOptions>("SimpleFlowModel.FK_FlowActionOptions_ActionOptions", "ActionOptions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ActionOptions> ActionOptionsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionOptions>("SimpleFlowModel.FK_FlowActionOptions_ActionOptions", "ActionOptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ActionOptions>("SimpleFlowModel.FK_FlowActionOptions_ActionOptions", "ActionOptions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_FlowActionOptions_Flows", "Flows")]
        public Flows Flows
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flows>("SimpleFlowModel.FK_FlowActionOptions_Flows", "Flows").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flows>("SimpleFlowModel.FK_FlowActionOptions_Flows", "Flows").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Flows> FlowsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flows>("SimpleFlowModel.FK_FlowActionOptions_Flows", "Flows");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Flows>("SimpleFlowModel.FK_FlowActionOptions_Flows", "Flows", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimpleFlowModel", Name="FlowActionOutputs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FlowActionOutputs : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FlowActionOutputs object.
        /// </summary>
        /// <param name="flowActOutputId">Initial value of the FlowActOutputId property.</param>
        /// <param name="flowPosition">Initial value of the FlowPosition property.</param>
        public static FlowActionOutputs CreateFlowActionOutputs(global::System.Int32 flowActOutputId, global::System.Int32 flowPosition)
        {
            FlowActionOutputs flowActionOutputs = new FlowActionOutputs();
            flowActionOutputs.FlowActOutputId = flowActOutputId;
            flowActionOutputs.FlowPosition = flowPosition;
            return flowActionOutputs;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FlowActOutputId
        {
            get
            {
                return _FlowActOutputId;
            }
            set
            {
                if (_FlowActOutputId != value)
                {
                    OnFlowActOutputIdChanging(value);
                    ReportPropertyChanging("FlowActOutputId");
                    _FlowActOutputId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FlowActOutputId");
                    OnFlowActOutputIdChanged();
                }
            }
        }
        private global::System.Int32 _FlowActOutputId;
        partial void OnFlowActOutputIdChanging(global::System.Int32 value);
        partial void OnFlowActOutputIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FlowPosition
        {
            get
            {
                return _FlowPosition;
            }
            set
            {
                OnFlowPositionChanging(value);
                ReportPropertyChanging("FlowPosition");
                _FlowPosition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FlowPosition");
                OnFlowPositionChanged();
            }
        }
        private global::System.Int32 _FlowPosition;
        partial void OnFlowPositionChanging(global::System.Int32 value);
        partial void OnFlowPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_FlowActionOutputs_ActionOutputs", "ActionOutputs")]
        public ActionOutputs ActionOutputs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionOutputs>("SimpleFlowModel.FK_FlowActionOutputs_ActionOutputs", "ActionOutputs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionOutputs>("SimpleFlowModel.FK_FlowActionOutputs_ActionOutputs", "ActionOutputs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ActionOutputs> ActionOutputsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionOutputs>("SimpleFlowModel.FK_FlowActionOutputs_ActionOutputs", "ActionOutputs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ActionOutputs>("SimpleFlowModel.FK_FlowActionOutputs_ActionOutputs", "ActionOutputs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_FlowActionOutputs_Flows", "Flows")]
        public Flows Flows
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flows>("SimpleFlowModel.FK_FlowActionOutputs_Flows", "Flows").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flows>("SimpleFlowModel.FK_FlowActionOutputs_Flows", "Flows").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Flows> FlowsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flows>("SimpleFlowModel.FK_FlowActionOutputs_Flows", "Flows");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Flows>("SimpleFlowModel.FK_FlowActionOutputs_Flows", "Flows", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimpleFlowModel", Name="FlowActions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FlowActions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FlowActions object.
        /// </summary>
        /// <param name="flowActionId">Initial value of the FlowActionId property.</param>
        /// <param name="position">Initial value of the Position property.</param>
        public static FlowActions CreateFlowActions(global::System.Int32 flowActionId, global::System.Int32 position)
        {
            FlowActions flowActions = new FlowActions();
            flowActions.FlowActionId = flowActionId;
            flowActions.Position = position;
            return flowActions;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FlowActionId
        {
            get
            {
                return _FlowActionId;
            }
            set
            {
                if (_FlowActionId != value)
                {
                    OnFlowActionIdChanging(value);
                    ReportPropertyChanging("FlowActionId");
                    _FlowActionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FlowActionId");
                    OnFlowActionIdChanged();
                }
            }
        }
        private global::System.Int32 _FlowActionId;
        partial void OnFlowActionIdChanging(global::System.Int32 value);
        partial void OnFlowActionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.Int32 _Position;
        partial void OnPositionChanging(global::System.Int32 value);
        partial void OnPositionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_FlowActions_Actions", "Actions")]
        public Actions Actions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actions>("SimpleFlowModel.FK_FlowActions_Actions", "Actions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actions>("SimpleFlowModel.FK_FlowActions_Actions", "Actions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Actions> ActionsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actions>("SimpleFlowModel.FK_FlowActions_Actions", "Actions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Actions>("SimpleFlowModel.FK_FlowActions_Actions", "Actions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_FlowActions_Flows", "Flows")]
        public Flows Flows
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flows>("SimpleFlowModel.FK_FlowActions_Flows", "Flows").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flows>("SimpleFlowModel.FK_FlowActions_Flows", "Flows").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Flows> FlowsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flows>("SimpleFlowModel.FK_FlowActions_Flows", "Flows");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Flows>("SimpleFlowModel.FK_FlowActions_Flows", "Flows", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimpleFlowModel", Name="FlowInstances")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FlowInstances : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FlowInstances object.
        /// </summary>
        /// <param name="flowInstanceId">Initial value of the FlowInstanceId property.</param>
        /// <param name="currentPosition">Initial value of the CurrentPosition property.</param>
        public static FlowInstances CreateFlowInstances(global::System.Int32 flowInstanceId, global::System.Int32 currentPosition)
        {
            FlowInstances flowInstances = new FlowInstances();
            flowInstances.FlowInstanceId = flowInstanceId;
            flowInstances.CurrentPosition = currentPosition;
            return flowInstances;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FlowInstanceId
        {
            get
            {
                return _FlowInstanceId;
            }
            set
            {
                if (_FlowInstanceId != value)
                {
                    OnFlowInstanceIdChanging(value);
                    ReportPropertyChanging("FlowInstanceId");
                    _FlowInstanceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FlowInstanceId");
                    OnFlowInstanceIdChanged();
                }
            }
        }
        private global::System.Int32 _FlowInstanceId;
        partial void OnFlowInstanceIdChanging(global::System.Int32 value);
        partial void OnFlowInstanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrentPosition
        {
            get
            {
                return _CurrentPosition;
            }
            set
            {
                OnCurrentPositionChanging(value);
                ReportPropertyChanging("CurrentPosition");
                _CurrentPosition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentPosition");
                OnCurrentPositionChanged();
            }
        }
        private global::System.Int32 _CurrentPosition;
        partial void OnCurrentPositionChanging(global::System.Int32 value);
        partial void OnCurrentPositionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_FlowInstances_Actions", "Actions")]
        public Actions Actions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actions>("SimpleFlowModel.FK_FlowInstances_Actions", "Actions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actions>("SimpleFlowModel.FK_FlowInstances_Actions", "Actions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Actions> ActionsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actions>("SimpleFlowModel.FK_FlowInstances_Actions", "Actions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Actions>("SimpleFlowModel.FK_FlowInstances_Actions", "Actions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_FlowInstances_Users", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("SimpleFlowModel.FK_FlowInstances_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("SimpleFlowModel.FK_FlowInstances_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("SimpleFlowModel.FK_FlowInstances_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("SimpleFlowModel.FK_FlowInstances_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_FlowInstances_Flows", "Flows")]
        public Flows Flows
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flows>("SimpleFlowModel.FK_FlowInstances_Flows", "Flows").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flows>("SimpleFlowModel.FK_FlowInstances_Flows", "Flows").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Flows> FlowsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flows>("SimpleFlowModel.FK_FlowInstances_Flows", "Flows");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Flows>("SimpleFlowModel.FK_FlowInstances_Flows", "Flows", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_FlowMOInstances_FlowInstances", "FlowMOInstances")]
        public EntityCollection<FlowMOInstances> FlowMOInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FlowMOInstances>("SimpleFlowModel.FK_FlowMOInstances_FlowInstances", "FlowMOInstances");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FlowMOInstances>("SimpleFlowModel.FK_FlowMOInstances_FlowInstances", "FlowMOInstances", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimpleFlowModel", Name="FlowMOInstances")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FlowMOInstances : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FlowMOInstances object.
        /// </summary>
        /// <param name="flowMOInstId">Initial value of the FlowMOInstId property.</param>
        public static FlowMOInstances CreateFlowMOInstances(global::System.Int32 flowMOInstId)
        {
            FlowMOInstances flowMOInstances = new FlowMOInstances();
            flowMOInstances.FlowMOInstId = flowMOInstId;
            return flowMOInstances;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FlowMOInstId
        {
            get
            {
                return _FlowMOInstId;
            }
            set
            {
                if (_FlowMOInstId != value)
                {
                    OnFlowMOInstIdChanging(value);
                    ReportPropertyChanging("FlowMOInstId");
                    _FlowMOInstId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FlowMOInstId");
                    OnFlowMOInstIdChanged();
                }
            }
        }
        private global::System.Int32 _FlowMOInstId;
        partial void OnFlowMOInstIdChanging(global::System.Int32 value);
        partial void OnFlowMOInstIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_FlowMOInstances_FlowInstances", "FlowInstances")]
        public FlowInstances FlowInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FlowInstances>("SimpleFlowModel.FK_FlowMOInstances_FlowInstances", "FlowInstances").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FlowInstances>("SimpleFlowModel.FK_FlowMOInstances_FlowInstances", "FlowInstances").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FlowInstances> FlowInstancesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FlowInstances>("SimpleFlowModel.FK_FlowMOInstances_FlowInstances", "FlowInstances");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FlowInstances>("SimpleFlowModel.FK_FlowMOInstances_FlowInstances", "FlowInstances", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_FlowMOInstances_FlowMultiOptions", "FlowMultiOptions")]
        public FlowMultiOptions FlowMultiOptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FlowMultiOptions>("SimpleFlowModel.FK_FlowMOInstances_FlowMultiOptions", "FlowMultiOptions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FlowMultiOptions>("SimpleFlowModel.FK_FlowMOInstances_FlowMultiOptions", "FlowMultiOptions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FlowMultiOptions> FlowMultiOptionsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FlowMultiOptions>("SimpleFlowModel.FK_FlowMOInstances_FlowMultiOptions", "FlowMultiOptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FlowMultiOptions>("SimpleFlowModel.FK_FlowMOInstances_FlowMultiOptions", "FlowMultiOptions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimpleFlowModel", Name="FlowMultiOptions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FlowMultiOptions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FlowMultiOptions object.
        /// </summary>
        /// <param name="flowMultiOptId">Initial value of the FlowMultiOptId property.</param>
        /// <param name="flowPosition">Initial value of the FlowPosition property.</param>
        /// <param name="optionValue">Initial value of the OptionValue property.</param>
        public static FlowMultiOptions CreateFlowMultiOptions(global::System.Int32 flowMultiOptId, global::System.Int32 flowPosition, global::System.String optionValue)
        {
            FlowMultiOptions flowMultiOptions = new FlowMultiOptions();
            flowMultiOptions.FlowMultiOptId = flowMultiOptId;
            flowMultiOptions.FlowPosition = flowPosition;
            flowMultiOptions.OptionValue = optionValue;
            return flowMultiOptions;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FlowMultiOptId
        {
            get
            {
                return _FlowMultiOptId;
            }
            set
            {
                if (_FlowMultiOptId != value)
                {
                    OnFlowMultiOptIdChanging(value);
                    ReportPropertyChanging("FlowMultiOptId");
                    _FlowMultiOptId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FlowMultiOptId");
                    OnFlowMultiOptIdChanged();
                }
            }
        }
        private global::System.Int32 _FlowMultiOptId;
        partial void OnFlowMultiOptIdChanging(global::System.Int32 value);
        partial void OnFlowMultiOptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FlowPosition
        {
            get
            {
                return _FlowPosition;
            }
            set
            {
                OnFlowPositionChanging(value);
                ReportPropertyChanging("FlowPosition");
                _FlowPosition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FlowPosition");
                OnFlowPositionChanged();
            }
        }
        private global::System.Int32 _FlowPosition;
        partial void OnFlowPositionChanging(global::System.Int32 value);
        partial void OnFlowPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OptionValue
        {
            get
            {
                return _OptionValue;
            }
            set
            {
                OnOptionValueChanging(value);
                ReportPropertyChanging("OptionValue");
                _OptionValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OptionValue");
                OnOptionValueChanged();
            }
        }
        private global::System.String _OptionValue;
        partial void OnOptionValueChanging(global::System.String value);
        partial void OnOptionValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentUrl
        {
            get
            {
                return _DocumentUrl;
            }
            set
            {
                OnDocumentUrlChanging(value);
                ReportPropertyChanging("DocumentUrl");
                _DocumentUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocumentUrl");
                OnDocumentUrlChanged();
            }
        }
        private global::System.String _DocumentUrl;
        partial void OnDocumentUrlChanging(global::System.String value);
        partial void OnDocumentUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentColumn
        {
            get
            {
                return _DocumentColumn;
            }
            set
            {
                OnDocumentColumnChanging(value);
                ReportPropertyChanging("DocumentColumn");
                _DocumentColumn = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocumentColumn");
                OnDocumentColumnChanged();
            }
        }
        private global::System.String _DocumentColumn;
        partial void OnDocumentColumnChanging(global::System.String value);
        partial void OnDocumentColumnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_FlowMOInstances_FlowMultiOptions", "FlowMOInstances")]
        public EntityCollection<FlowMOInstances> FlowMOInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FlowMOInstances>("SimpleFlowModel.FK_FlowMOInstances_FlowMultiOptions", "FlowMOInstances");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FlowMOInstances>("SimpleFlowModel.FK_FlowMOInstances_FlowMultiOptions", "FlowMOInstances", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_FlowMultiOptions_Flows", "Flows")]
        public Flows Flows
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flows>("SimpleFlowModel.FK_FlowMultiOptions_Flows", "Flows").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flows>("SimpleFlowModel.FK_FlowMultiOptions_Flows", "Flows").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Flows> FlowsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flows>("SimpleFlowModel.FK_FlowMultiOptions_Flows", "Flows");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Flows>("SimpleFlowModel.FK_FlowMultiOptions_Flows", "Flows", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimpleFlowModel", Name="Flows")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Flows : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Flows object.
        /// </summary>
        /// <param name="flowId">Initial value of the FlowId property.</param>
        /// <param name="flowName">Initial value of the FlowName property.</param>
        public static Flows CreateFlows(global::System.Int32 flowId, global::System.String flowName)
        {
            Flows flows = new Flows();
            flows.FlowId = flowId;
            flows.FlowName = flowName;
            return flows;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FlowId
        {
            get
            {
                return _FlowId;
            }
            set
            {
                if (_FlowId != value)
                {
                    OnFlowIdChanging(value);
                    ReportPropertyChanging("FlowId");
                    _FlowId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FlowId");
                    OnFlowIdChanged();
                }
            }
        }
        private global::System.Int32 _FlowId;
        partial void OnFlowIdChanging(global::System.Int32 value);
        partial void OnFlowIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FlowName
        {
            get
            {
                return _FlowName;
            }
            set
            {
                OnFlowNameChanging(value);
                ReportPropertyChanging("FlowName");
                _FlowName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FlowName");
                OnFlowNameChanged();
            }
        }
        private global::System.String _FlowName;
        partial void OnFlowNameChanging(global::System.String value);
        partial void OnFlowNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FlowUseCaseNumber
        {
            get
            {
                return _FlowUseCaseNumber;
            }
            set
            {
                OnFlowUseCaseNumberChanging(value);
                ReportPropertyChanging("FlowUseCaseNumber");
                _FlowUseCaseNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FlowUseCaseNumber");
                OnFlowUseCaseNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _FlowUseCaseNumber;
        partial void OnFlowUseCaseNumberChanging(Nullable<global::System.Int32> value);
        partial void OnFlowUseCaseNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FlowStartTime
        {
            get
            {
                return _FlowStartTime;
            }
            set
            {
                OnFlowStartTimeChanging(value);
                ReportPropertyChanging("FlowStartTime");
                _FlowStartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FlowStartTime");
                OnFlowStartTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _FlowStartTime;
        partial void OnFlowStartTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnFlowStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FlowEndTime
        {
            get
            {
                return _FlowEndTime;
            }
            set
            {
                OnFlowEndTimeChanging(value);
                ReportPropertyChanging("FlowEndTime");
                _FlowEndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FlowEndTime");
                OnFlowEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _FlowEndTime;
        partial void OnFlowEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnFlowEndTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_FlowActions_Flows", "FlowActions")]
        public EntityCollection<FlowActions> FlowActions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FlowActions>("SimpleFlowModel.FK_FlowActions_Flows", "FlowActions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FlowActions>("SimpleFlowModel.FK_FlowActions_Flows", "FlowActions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_Flows_Users", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("SimpleFlowModel.FK_Flows_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("SimpleFlowModel.FK_Flows_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("SimpleFlowModel.FK_Flows_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("SimpleFlowModel.FK_Flows_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_FlowInstances_Flows", "FlowInstances")]
        public EntityCollection<FlowInstances> FlowInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FlowInstances>("SimpleFlowModel.FK_FlowInstances_Flows", "FlowInstances");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FlowInstances>("SimpleFlowModel.FK_FlowInstances_Flows", "FlowInstances", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_FlowActionOptions_Flows", "FlowActionOptions")]
        public EntityCollection<FlowActionOptions> FlowActionOptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FlowActionOptions>("SimpleFlowModel.FK_FlowActionOptions_Flows", "FlowActionOptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FlowActionOptions>("SimpleFlowModel.FK_FlowActionOptions_Flows", "FlowActionOptions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_FlowMultiOptions_Flows", "FlowMultiOptions")]
        public EntityCollection<FlowMultiOptions> FlowMultiOptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FlowMultiOptions>("SimpleFlowModel.FK_FlowMultiOptions_Flows", "FlowMultiOptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FlowMultiOptions>("SimpleFlowModel.FK_FlowMultiOptions_Flows", "FlowMultiOptions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_MonitorInstances_Flows", "MonitorInstances")]
        public EntityCollection<MonitorInstances> MonitorInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MonitorInstances>("SimpleFlowModel.FK_MonitorInstances_Flows", "MonitorInstances");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MonitorInstances>("SimpleFlowModel.FK_MonitorInstances_Flows", "MonitorInstances", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_FlowActionInputs_Flows", "FlowActionInputs")]
        public EntityCollection<FlowActionInputs> FlowActionInputs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FlowActionInputs>("SimpleFlowModel.FK_FlowActionInputs_Flows", "FlowActionInputs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FlowActionInputs>("SimpleFlowModel.FK_FlowActionInputs_Flows", "FlowActionInputs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_FlowActionOutputs_Flows", "FlowActionOutputs")]
        public EntityCollection<FlowActionOutputs> FlowActionOutputs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FlowActionOutputs>("SimpleFlowModel.FK_FlowActionOutputs_Flows", "FlowActionOutputs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FlowActionOutputs>("SimpleFlowModel.FK_FlowActionOutputs_Flows", "FlowActionOutputs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_UseCases_Flows", "UseCases")]
        public EntityCollection<UseCases> UseCases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UseCases>("SimpleFlowModel.FK_UseCases_Flows", "UseCases");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UseCases>("SimpleFlowModel.FK_UseCases_Flows", "UseCases", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimpleFlowModel", Name="MonitorInstances")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MonitorInstances : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MonitorInstances object.
        /// </summary>
        /// <param name="monitorInstanceId">Initial value of the MonitorInstanceId property.</param>
        /// <param name="flowPosition">Initial value of the FlowPosition property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="frequency">Initial value of the Frequency property.</param>
        /// <param name="objectType">Initial value of the ObjectType property.</param>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="metric">Initial value of the Metric property.</param>
        /// <param name="destinationType">Initial value of the DestinationType property.</param>
        public static MonitorInstances CreateMonitorInstances(global::System.Int32 monitorInstanceId, global::System.Int32 flowPosition, global::System.DateTime startDate, global::System.TimeSpan startTime, global::System.String frequency, global::System.String objectType, global::System.String objectId, global::System.String metric, global::System.String destinationType)
        {
            MonitorInstances monitorInstances = new MonitorInstances();
            monitorInstances.MonitorInstanceId = monitorInstanceId;
            monitorInstances.FlowPosition = flowPosition;
            monitorInstances.StartDate = startDate;
            monitorInstances.StartTime = startTime;
            monitorInstances.Frequency = frequency;
            monitorInstances.ObjectType = objectType;
            monitorInstances.ObjectId = objectId;
            monitorInstances.Metric = metric;
            monitorInstances.DestinationType = destinationType;
            return monitorInstances;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MonitorInstanceId
        {
            get
            {
                return _MonitorInstanceId;
            }
            set
            {
                if (_MonitorInstanceId != value)
                {
                    OnMonitorInstanceIdChanging(value);
                    ReportPropertyChanging("MonitorInstanceId");
                    _MonitorInstanceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MonitorInstanceId");
                    OnMonitorInstanceIdChanged();
                }
            }
        }
        private global::System.Int32 _MonitorInstanceId;
        partial void OnMonitorInstanceIdChanging(global::System.Int32 value);
        partial void OnMonitorInstanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FlowPosition
        {
            get
            {
                return _FlowPosition;
            }
            set
            {
                OnFlowPositionChanging(value);
                ReportPropertyChanging("FlowPosition");
                _FlowPosition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FlowPosition");
                OnFlowPositionChanged();
            }
        }
        private global::System.Int32 _FlowPosition;
        partial void OnFlowPositionChanging(global::System.Int32 value);
        partial void OnFlowPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.TimeSpan _StartTime;
        partial void OnStartTimeChanging(global::System.TimeSpan value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.TimeSpan> value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Frequency
        {
            get
            {
                return _Frequency;
            }
            set
            {
                OnFrequencyChanging(value);
                ReportPropertyChanging("Frequency");
                _Frequency = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Frequency");
                OnFrequencyChanged();
            }
        }
        private global::System.String _Frequency;
        partial void OnFrequencyChanging(global::System.String value);
        partial void OnFrequencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ObjectType
        {
            get
            {
                return _ObjectType;
            }
            set
            {
                OnObjectTypeChanging(value);
                ReportPropertyChanging("ObjectType");
                _ObjectType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ObjectType");
                OnObjectTypeChanged();
            }
        }
        private global::System.String _ObjectType;
        partial void OnObjectTypeChanging(global::System.String value);
        partial void OnObjectTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                OnObjectIdChanging(value);
                ReportPropertyChanging("ObjectId");
                _ObjectId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ObjectId");
                OnObjectIdChanged();
            }
        }
        private global::System.String _ObjectId;
        partial void OnObjectIdChanging(global::System.String value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Metric
        {
            get
            {
                return _Metric;
            }
            set
            {
                OnMetricChanging(value);
                ReportPropertyChanging("Metric");
                _Metric = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Metric");
                OnMetricChanged();
            }
        }
        private global::System.String _Metric;
        partial void OnMetricChanging(global::System.String value);
        partial void OnMetricChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DestinationType
        {
            get
            {
                return _DestinationType;
            }
            set
            {
                OnDestinationTypeChanging(value);
                ReportPropertyChanging("DestinationType");
                _DestinationType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DestinationType");
                OnDestinationTypeChanged();
            }
        }
        private global::System.String _DestinationType;
        partial void OnDestinationTypeChanging(global::System.String value);
        partial void OnDestinationTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DestinationUrl
        {
            get
            {
                return _DestinationUrl;
            }
            set
            {
                OnDestinationUrlChanging(value);
                ReportPropertyChanging("DestinationUrl");
                _DestinationUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DestinationUrl");
                OnDestinationUrlChanged();
            }
        }
        private global::System.String _DestinationUrl;
        partial void OnDestinationUrlChanging(global::System.String value);
        partial void OnDestinationUrlChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_MonitorInstances_Flows", "Flows")]
        public Flows Flows
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flows>("SimpleFlowModel.FK_MonitorInstances_Flows", "Flows").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flows>("SimpleFlowModel.FK_MonitorInstances_Flows", "Flows").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Flows> FlowsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flows>("SimpleFlowModel.FK_MonitorInstances_Flows", "Flows");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Flows>("SimpleFlowModel.FK_MonitorInstances_Flows", "Flows", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimpleFlowModel", Name="Options")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Options : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Options object.
        /// </summary>
        /// <param name="optionId">Initial value of the OptionId property.</param>
        /// <param name="optionName">Initial value of the OptionName property.</param>
        /// <param name="optionType">Initial value of the OptionType property.</param>
        public static Options CreateOptions(global::System.Int32 optionId, global::System.String optionName, global::System.String optionType)
        {
            Options options = new Options();
            options.OptionId = optionId;
            options.OptionName = optionName;
            options.OptionType = optionType;
            return options;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OptionId
        {
            get
            {
                return _OptionId;
            }
            set
            {
                if (_OptionId != value)
                {
                    OnOptionIdChanging(value);
                    ReportPropertyChanging("OptionId");
                    _OptionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OptionId");
                    OnOptionIdChanged();
                }
            }
        }
        private global::System.Int32 _OptionId;
        partial void OnOptionIdChanging(global::System.Int32 value);
        partial void OnOptionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OptionName
        {
            get
            {
                return _OptionName;
            }
            set
            {
                OnOptionNameChanging(value);
                ReportPropertyChanging("OptionName");
                _OptionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OptionName");
                OnOptionNameChanged();
            }
        }
        private global::System.String _OptionName;
        partial void OnOptionNameChanging(global::System.String value);
        partial void OnOptionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OptionType
        {
            get
            {
                return _OptionType;
            }
            set
            {
                OnOptionTypeChanging(value);
                ReportPropertyChanging("OptionType");
                _OptionType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OptionType");
                OnOptionTypeChanged();
            }
        }
        private global::System.String _OptionType;
        partial void OnOptionTypeChanging(global::System.String value);
        partial void OnOptionTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_ActionOptions_Options", "ActionOptions")]
        public EntityCollection<ActionOptions> ActionOptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActionOptions>("SimpleFlowModel.FK_ActionOptions_Options", "ActionOptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActionOptions>("SimpleFlowModel.FK_ActionOptions_Options", "ActionOptions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimpleFlowModel", Name="UseCases")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UseCases : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UseCases object.
        /// </summary>
        /// <param name="useCaseId">Initial value of the UseCaseId property.</param>
        /// <param name="useCaseNumber">Initial value of the UseCaseNumber property.</param>
        public static UseCases CreateUseCases(global::System.Int32 useCaseId, global::System.Int32 useCaseNumber)
        {
            UseCases useCases = new UseCases();
            useCases.UseCaseId = useCaseId;
            useCases.UseCaseNumber = useCaseNumber;
            return useCases;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UseCaseId
        {
            get
            {
                return _UseCaseId;
            }
            set
            {
                if (_UseCaseId != value)
                {
                    OnUseCaseIdChanging(value);
                    ReportPropertyChanging("UseCaseId");
                    _UseCaseId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UseCaseId");
                    OnUseCaseIdChanged();
                }
            }
        }
        private global::System.Int32 _UseCaseId;
        partial void OnUseCaseIdChanging(global::System.Int32 value);
        partial void OnUseCaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UseCaseNumber
        {
            get
            {
                return _UseCaseNumber;
            }
            set
            {
                OnUseCaseNumberChanging(value);
                ReportPropertyChanging("UseCaseNumber");
                _UseCaseNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UseCaseNumber");
                OnUseCaseNumberChanged();
            }
        }
        private global::System.Int32 _UseCaseNumber;
        partial void OnUseCaseNumberChanging(global::System.Int32 value);
        partial void OnUseCaseNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartTime;
        partial void OnStartTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_UseCases_Flows", "Flows")]
        public Flows Flows
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flows>("SimpleFlowModel.FK_UseCases_Flows", "Flows").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flows>("SimpleFlowModel.FK_UseCases_Flows", "Flows").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Flows> FlowsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flows>("SimpleFlowModel.FK_UseCases_Flows", "Flows");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Flows>("SimpleFlowModel.FK_UseCases_Flows", "Flows", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimpleFlowModel", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Users object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="sNUserId">Initial value of the SNUserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        public static Users CreateUsers(global::System.Int32 userId, global::System.String sNUserId, global::System.String userName)
        {
            Users users = new Users();
            users.UserId = userId;
            users.SNUserId = sNUserId;
            users.UserName = userName;
            return users;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SNUserId
        {
            get
            {
                return _SNUserId;
            }
            set
            {
                OnSNUserIdChanging(value);
                ReportPropertyChanging("SNUserId");
                _SNUserId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SNUserId");
                OnSNUserIdChanged();
            }
        }
        private global::System.String _SNUserId;
        partial void OnSNUserIdChanging(global::System.String value);
        partial void OnSNUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserType
        {
            get
            {
                return _UserType;
            }
            set
            {
                OnUserTypeChanging(value);
                ReportPropertyChanging("UserType");
                _UserType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserType");
                OnUserTypeChanged();
            }
        }
        private global::System.String _UserType;
        partial void OnUserTypeChanging(global::System.String value);
        partial void OnUserTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserAT
        {
            get
            {
                return _UserAT;
            }
            set
            {
                OnUserATChanging(value);
                ReportPropertyChanging("UserAT");
                _UserAT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserAT");
                OnUserATChanged();
            }
        }
        private global::System.String _UserAT;
        partial void OnUserATChanging(global::System.String value);
        partial void OnUserATChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> UserExpiration
        {
            get
            {
                return _UserExpiration;
            }
            set
            {
                OnUserExpirationChanging(value);
                ReportPropertyChanging("UserExpiration");
                _UserExpiration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserExpiration");
                OnUserExpirationChanged();
            }
        }
        private Nullable<global::System.Decimal> _UserExpiration;
        partial void OnUserExpirationChanging(Nullable<global::System.Decimal> value);
        partial void OnUserExpirationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_Flows_Users", "Flows")]
        public EntityCollection<Flows> Flows
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Flows>("SimpleFlowModel.FK_Flows_Users", "Flows");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Flows>("SimpleFlowModel.FK_Flows_Users", "Flows", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimpleFlowModel", "FK_FlowInstances_Users", "FlowInstances")]
        public EntityCollection<FlowInstances> FlowInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FlowInstances>("SimpleFlowModel.FK_FlowInstances_Users", "FlowInstances");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FlowInstances>("SimpleFlowModel.FK_FlowInstances_Users", "FlowInstances", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
